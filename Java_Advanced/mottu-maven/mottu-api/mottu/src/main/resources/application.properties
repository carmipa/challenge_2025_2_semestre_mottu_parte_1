# ==================================================
# Spring Boot Application Configuration
# ==================================================

# --- Application Name and .env Import ---
# Defines the application name and allows importing configurations from a .env file.
spring.application.name=mottu

# --- Server Configuration ---
# Configures the embedded server (e.g., Tomcat).
server.port=8080
# Sets the application context path to root (e.g., http://localhost:8080/)
server.servlet.context-path=/

# --- Oracle DataSource Configuration ---
# Connection details for your Oracle database.
# The local XEPDB1 configuration is commented out; the FIAP Oracle DB is active.
#spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/XEPDB1
spring.profiles.active=dev
spring.datasource.url=jdbc:oracle:thin:@//oracle.fiap.com.br:1521/ORCL
spring.datasource.username=rm557881
spring.datasource.password=fiap25
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# --- JPA / Hibernate Configuration ---
# Settings for Java Persistence API and Hibernate ORM.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=validate

# --- Spring AI Configuration (Vertex AI Gemini) ---
# Reads Vertex AI Gemini settings from environment variables.
# Ensure VERTEX_AI_PROJECT_ID and API_KEY are set in your environment or .env file.
spring.ai.vertex.ai.gemini.project-id=${VERTEX_AI_PROJECT_ID}
spring.ai.vertex.ai.gemini.location=us-central1
spring.ai.vertex.ai.gemini.api-key=${API_KEY}
spring.ai.vertex.ai.gemini.transport=rest

# --- Springdoc OpenAPI (Swagger) Configuration ---
# Settings for API documentation generation.
# app.launch-swagger-on-startup=true # Tries to open Swagger UI in browser on startup.
# springdoc.api-docs.path=/v3/api-docs # Path for the OpenAPI specification.
# springdoc.swagger-ui.path=/swagger-ui/index.html # Path for the Swagger UI interface.

# --- HTTP Error Response Details ---
# Configures what details are included in HTTP error responses.
server.error.include-stacktrace=always
server.error.include-message=always
server.error.include-exception=true

# --- Logging Levels ---
# Defines verbosity for different logging categories.
logging.level.root=INFO

# Spring Framework specific logging
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.data.jpa=DEBUG
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.security.web=TRACE
logging.level.org.springframework.security.authentication=TRACE

# Hibernate specific logging
logging.level.org.hibernate.type.descriptor.sql=TRACE
logging.level.org.hibernate.engine.jdbc.spi.SqlExceptionHelper=DEBUG
logging.level.org.hibernate.tool.schema.internal.SchemaCreatorImpl=DEBUG
logging.level.org.hibernate.dialect.Dialect=DEBUG
logging.level.org.hibernate.resource.jdbc=DEBUG

# Application specific logging (adjust br.com.fiap.mottu to your main application package if different)
logging.level.br.com.fiap.mottu=DEBUG

# Database driver and connection pool logging
logging.level.oracle=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
